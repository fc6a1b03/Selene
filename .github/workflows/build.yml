name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
    - uses: actions/checkout@v5

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:  
        channel: stable
        flutter-version: 3.x

    - name: Get dependencies  
      run: flutter pub get  
    - name: Extract version from pubspec.yaml
      id: version  
      run: |
        VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)  
        VERSION_NAME=$(echo $VERSION | cut -d '+' -f 1)  
        BUILD_NUMBER=$(echo $VERSION | cut -d '+' -f 2)  
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT  
        echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT  
        echo "full_version=$VERSION" >> $GITHUB_OUTPUT
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - name: Build APK (multi-arch)
      run: |
        # Flutter 架构列表
        ARCHS="android-arm android-arm64 android-x86 android-x86_64"
        for arch in $ARCHS; do
          flutter build apk --release \
            --target-platform $arch \
            --target=lib/main.dart \
            --build-name=1.0.0 \
            --build-number=1
          # 映射可读文件名
          case $arch in
            android-arm)     suffix=armeabi-v7a ;;
            android-arm64)   suffix=arm64-v8a   ;;
            android-x86)     suffix=x86         ;;
            android-x86_64)  suffix=x86_64      ;;
          esac
          mv build/app/outputs/flutter-apk/app-release.apk \
             build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-${suffix}.apk
        done

    - name: Rename APK
      run: |
        mv build/app/outputs/flutter-apk/app-release.apk \
           build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}.apk
    - name: Push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # 检测远程是否已有该 tag
        if ! git ls-remote --tags origin "v${{ steps.version.outputs.full_version }}" | grep -q "v${{ steps.version.outputs.full_version }}"; then
          git tag "v${{ steps.version.outputs.full_version }}"
          git push origin "v${{ steps.version.outputs.full_version }}"
        else
          echo "Tag v${{ steps.version.outputs.full_version }} already exists, skip creating."
        fi
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.full_version }}
        name: Selene v${{ steps.version.outputs.full_version }}
        body: |
          Auto-generated release for ${{ steps.version.outputs.full_version }}.
          | Arch | Filename |
          |------|----------|
          | armeabi-v7a | selene-v${{ steps.version.outputs.full_version }}-armeabi-v7a.apk |
          | arm64-v8a   | selene-v${{ steps.version.outputs.full_version }}-arm64-v8a.apk   |
          | x86         | selene-v${{ steps.version.outputs.full_version }}-x86.apk         |
          | x86_64      | selene-v${{ steps.version.outputs.full_version }}-x86_64.apk      |
        files: |
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-armeabi-v7a.apk
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-arm64-v8a.apk
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-x86.apk
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-x86_64.apk
        draft: false
        prerelease: false
