name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
    - uses: actions/checkout@v5

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:  
        channel: stable
        flutter-version: 3.x

    - name: Get dependencies  
      run: flutter pub get  
    - name: Extract version & generate unique suffix
      id: version
      run: |
        VERSION_NAME=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 | cut -d'+' -f1)
        BUILD_NUMBER=$(date +%s)
        SHORT_TIME=$(date +%y%m%d%H)
        SHORT_HASH=$(git rev-parse --short=7 HEAD)
        SUFFIX="${SHORT_TIME}-${SHORT_HASH}"
        FULL_VERSION="${VERSION_NAME}+${BUILD_NUMBER}-${SUFFIX}"
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
    - name: Build APK (multi-arch)
      run: |
        flutter build apk --release --split-per-abi --verbose \
          --build-name=${{ steps.version.outputs.version_name }} \
          --build-number=${{ steps.version.outputs.build_number }}

    - name: Rename APK
      run: |
        OUT=build/app/outputs/flutter-apk
        VER=${{ steps.version.outputs.full_version }}
        mv $OUT/app-armeabi-v7a-release.apk  $OUT/selene-v${VER}-armeabi-v7a.apk
        mv $OUT/app-arm64-v8a-release.apk    $OUT/selene-v${VER}-arm64-v8a.apk
        mv $OUT/app-x86_64-release.apk       $OUT/selene-v${VER}-x86_64.apk
    - name: Push tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        TAG="v${{ steps.version.outputs.full_version }}"
        if git ls-remote --tags origin "$TAG" | grep -q "$TAG"; then
          echo "Tag $TAG already exists, skip creating."
        else
          git tag "$TAG"
          git push origin "$TAG"
        fi
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.full_version }}
        name: Selene v${{ steps.version.outputs.full_version }}
        body: |
          Auto-generated release for ${{ steps.version.outputs.full_version }}.
          | Arch | Filename |
          |------|----------|
          | armeabi-v7a | selene-v${{ steps.version.outputs.full_version }}-armeabi-v7a.apk |
          | arm64-v8a   | selene-v${{ steps.version.outputs.full_version }}-arm64-v8a.apk   |
          | x86_64      | selene-v${{ steps.version.outputs.full_version }}-x86_64.apk      |
        files: |
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-armeabi-v7a.apk
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-arm64-v8a.apk
          build/app/outputs/flutter-apk/selene-v${{ steps.version.outputs.full_version }}-x86_64.apk
        draft: false
        prerelease: false
